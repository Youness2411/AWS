services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      args:
        SKIP_CORP_CERT: ${SKIP_CORP_CERT}
    container_name: onepiece-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SECRETJWTSTRING: ${SECRETJWTSTRING}
      MISTRAL_API_KEY: ${MISTRAL_API_KEY}
      TZ: Europe/Paris
    volumes:
      - images_data:/app/uploads/images
    depends_on:
      - db
    develop:
      watch:
        - path: ./backend
          action: rebuild
          ignore:
            - "**/target/**"
            - "**/.git/**"
            - "**/.idea/**"
            - "**/.vscode/**"

  init-theories:
    image: curlimages/curl
    depends_on:
      - backend
    entrypoint: [ "sh", "-c", "sleep 30 && sh /init_theories.sh" ]
    volumes:
      - ./backend/init_theories.sh:/init_theories.sh

  frontend:
    build: ./frontend
    container_name: onepiece-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    develop:
      watch:
        - path: ./frontend
          action: rebuild
          ignore:
            - "**/dist/**"
            - "**/node_modules/**"
            - "**/.git/**"
            - "**/.idea/**"
            - "**/.vscode/**"

  ai-proxy:
    build: ./ai-proxy
    environment:
      PORT: 3000
      MISTRAL_API_KEY: ${MISTRAL_API_KEY}
      MISTRAL_MODEL: mistral-large-latest
      LANGCHAIN_TRACING_V2: "true"
      LANGCHAIN_API_KEY: ${LANGCHAIN_API_KEY}
      LANGCHAIN_PROJECT: ${LANGCHAIN_PROJECT}
      # LANGCHAIN_ENDPOINT: https://api.smith.langchain.com   # optionnel (par d√©faut)
    depends_on:
      - backend

  db:
    image: postgres:15
    container_name: onepiece-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  db_data:
  images_data:
